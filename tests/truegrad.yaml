program: tg.py
method: grid
parameters:
  use_square:
    distribution: categorical
    values: [ 0, 1 ]
  graft:
    distribution: categorical
    values: [ 0, 1 ]
  seed:
    distribution: categorical
    values: [ 0, 1 ]
  batch_size:
    distribution: categorical
    values: [ 16384 ]
  feature_factor:
    distribution: categorical
    values: [ 128 ]
  learning_rate:
    distribution: categorical
    values: [ 0.01 ]
  beta1:
    distribution: categorical
    values: [ 0.15, 0.57, 0.78, 0.89, 0.94 ]  # [int(100 * (1 - 0.5 ** (i - 0.75))) / 100 for i in range(1, 5)]
  beta2:
    distribution: categorical
    values: [ 0.15, 0.57, 0.78, 0.89, 0.94 ]
  beta3:
    distribution: categorical
    values: [ 0.15, 0.57, 0.78, 0.89, 0.94 ]
  beta4:
    distribution: categorical
    values: [ 0.15, 0.57, 0.78, 0.89, 0.94 ]
  dropout:
    distribution: categorical
    values: [ 0.1 ]
  normalization:
    distribution: categorical
    values: [ LayerNorm ]
  residual:
    distribution: categorical
    values: [ 1 ]
  depth:
    distribution: categorical
    values: [ 3 ]
  dataset:
    distribution: categorical
    values: [ MNIST, CIFAR10, CIFAR100 ]
  optimizer:
    distribution: categorical
    values: [ TGLaProp, TGAdamW, TGRMSProp ]
